#!/usr/bin/env bash

RED='\033[01;31m'
GREEN='\033[01;32m'
NONE='\033[00m'

# use an already running container
if [[ "$1" == "--current" ]]; then
  DOCKER_CONTAINER_NAME=0
# build test image if no image name passed
elif [ -z "$1" ]; then
  echo "Building test image from jwt-nginx"
  DOCKER_IMAGE_NAME=jwt-nginx-test
  docker build -f Dockerfile.test -t ${DOCKER_IMAGE_NAME} .
  if [ $? -ne 0 ]
  then
    echo -e "${RED}Build Failed${NONE}";
    exit 1;
  fi
# use a specific image
else
  DOCKER_IMAGE_NAME=$1
  echo "Using image ${DOCKER_IMAGE_NAME} for tests"
  shift
fi

if [[ "$DOCKER_CONTAINER_NAME" != 0 ]]; then
  DOCKER_CONTAINER_NAME=container-${DOCKER_IMAGE_NAME}
  docker run --rm --name "${DOCKER_CONTAINER_NAME}" -d -p 8000:8000 ${DOCKER_IMAGE_NAME}
fi

if [[ "$OSTYPE" == "darwin"* ]] || [[ "$OSTYPE" == "linux"* ]]; then
  # Mac OSX / Linux
  MACHINE_IP='localhost'
else
  # Windows
  MACHINE_IP=`docker-machine ip 2> /dev/null`
fi

VALID_JWT="eyJhbGciOiJIUzI1NiJ9.e30.-gVyhFDs5NeX0yvaAoTPVgrDfrg_qk7dF0sNj_-Bu-c"
BAD_SIG="eyJhbGciOiJIUzI1NiJ9.e30.nmwH1lIcnA-g8CEV_fWIlAV7h98_Wwy1gIqIabAdrIs"

test_jwt () {
  name=$1
  path=$2
  expect=$3
  extra=$4

  cmd="curl -X GET -o /dev/null --silent --head --write-out '%{http_code}' http://$MACHINE_IP:8000$path -H 'cache-control: no-cache' $extra"

  test=$( eval $cmd )
  if [ "$test" -eq "$expect" ];then
    echo -e "${GREEN}${name}: passed (${test})${NONE}";
  else
    echo -e "${RED}${name}: failed (${test} instead of ${expect})${NONE}";
  fi
}

test_jwt "Insecure test" "/" "200"

test_jwt "Secure test without jwt" "/secure-cookie/" "401"

test_jwt "Secure test without jwt" "/secure-auth-header/" "401"

test_jwt "Secure test with valid jwt cookie" "/secure-cookie/" "200" "--cookie \"rampartjwt=${VALID_JWT}\""

test_jwt "Secure test with bad cookie name" "/secure-cookie/" "401" "--cookie \"invalid_name=${VALID_JWT}\""

test_jwt "Secure test with invalid jwt cookie" "/secure-cookie/" "401" "--cookie \"rampartjwt=invalid\""

test_jwt "Secure test with valid jwt cookie but invalid signature" "/secure-cookie/" "401" "--cookie \"rampartjwt=${BAD_SIG}\""

test_jwt "Secure test with valid jwt cookie but expecting auth header" "/secure-cookie/" "401" "--header \"Authorization: Bearer ${VALID_JWT}\""

test_jwt "Secure test with valid jwt auth header but expecting cookie" "/secure-cookie/" "401" "--header \"Authorization: Bearer ${VALID_JWT}\""

test_jwt "Secure test with valid jwt auth header" "/secure-auth-header/" "200" "--header \"Authorization: Bearer ${VALID_JWT}\""

test_jwt "Secure test with valid jwt auth header but invalid signature" "/secure-auth-header/" "401" "--header \"Authorization: Bearer ${BAD_SIG}\""

test_jwt "Secure test with invalid jwt auth header" "/secure-auth-header/" "401" "--header \"Authorization: x\""

test_jwt "Secure test with invalid jwt auth header" "/secure-auth-header/" "401" "--header \"Authorization: Beare\""

test_jwt "Secure test with invalid jwt auth header" "/secure-auth-header/" "401" "--header \"Authorization: Bearer\""

test_jwt "Secure test with invalid jwt auth header" "/secure-auth-header/" "401" "--header \"Authorization: BearerXa\""

test_jwt "Secure test with invalid jwt auth header" "/secure-auth-header/" "401" "--header \"Authorization: BearAr a\""

if [[ "$DOCKER_CONTAINER_NAME" != 0 ]]; then
  echo stopping container $DOCKER_CONTAINER_NAME
  docker stop ${DOCKER_CONTAINER_NAME} > /dev/null
fi
